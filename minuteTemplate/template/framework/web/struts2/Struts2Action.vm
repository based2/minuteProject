#exposeVariableEntitySpecific()
package $packageName;

import java.sql.*;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;

import net.sf.minuteProject.architecture.bsla.factory.MyProjectFactory;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ActionContext;
#foreach ($reference in $parentReferences)
#putReferenceParams()
#exposeImportParams($reference.table)
import $importDomainObject;
#end

/**
 *
 * <p>Title: ${className}</p>
 *
 * <p>Description: Struts2 action for ${className} entity</p>
 *
 */
public class ${className} extends ActionSupport {


//    public String insert () throws Exception {
//        dao.insert$tableClassName(entity);
//        return "success";
		//doExit (req, res, entity, "${tableClassName}SearchResultOne", "$jspPath/${tableClassName}ResultOneScreen.jsp");    
    }
    
    public String save() throws Exception {
        //dao.insert$tableClassName(entity);    
        return "success";
    }

    public String edit() throws Exception {
        return "input";
    }
    
    public String load() throws Exception {
    	return "load";
    }
    
    public String search() throws Exception {
    	return "search";
    }
    
    
#foreach ($column in ${table.columns})
	#putColumnParams()
private $columnType $columnVar;
#end

#foreach ($reference in $parentReferences)
#putReferenceParams()
    private $linkclass $var;
#end

#foreach ($reference in $childReferences)
#putReferenceParams()
	private List ${var}s;
#end

    public ${className}() {
    }
    
    // default actions
    public String doInput() {
		return INPUT;
	}

#foreach ($column in ${table.columns})
#putColumnParams()
    public $columnType get$columnClass() {
        	return $columnVar;
    }
	
    public void set$columnClass ($columnType $columnVar) {
        this.$columnVar = $columnVar;
    }	
#end
#foreach ($reference in $parentReferences)
#putReferenceParams()
    public $linkclass get$varclass () {
    	    return $var;
    }
	
    public void set$varclass ($linkclass $var) {
    	    this.$var = $var;
    }
	#end
#foreach ($reference in $childReferences)
#putReferenceParams()
    public List get${varclass}s() {
        if (${var}s == null){
            ${var}s = new ArrayList();
        }
        return ${var}s;
    }

    public void set${varclass}s (List ${var}s) {
        this.${var}s = ${var}s;
    }	
#end

}
