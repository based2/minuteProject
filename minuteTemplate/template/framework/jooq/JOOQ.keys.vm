#exposeJOOQModelSpecific()
#addedAreas()
/**
 * This class is generated by minuteproject 4 jOOQ
 */
package $packageName;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.ForeignKey;
import org.jooq.Identity;
#putClassImportSnippet()
@SuppressWarnings({"unchecked"})
public class Keys extends AbstractKeys {

	// IDENTITY definitions 
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
#if($table.hasPrimaryKey() && !$isPkUserProvided && $tableUtils.getNumberOfPrimaryColumns($table)==1)
    public static final Identity<$recordClassImport, $primaryKeyFullType> IDENTITY_$classNameLowerCase = createIdentity($classConstant, $classPkConstant);
#end
#end

    // UNIQUE and PRIMARY KEY definitions
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
#foreach($columns in $table.columns)
#if($tableUtils.isUnique($table, $column))
##what about composite unique field not covered
#putJOOQColumnParam()
//	public static final UniqueKey<${recordClassImport}> KEY_${classNameLowerCase}_PRIMARY= createUniqueKey($classConstant, ${classFieldConstant});
#end
#end
#end
    //Limitation
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
##what about composite pk
#if($table.hasPrimaryKey()) 
    public static final UniqueKey<${recordClassImport}> KEY_${classNameLowerCase}_PRIMARY= 
        createUniqueKey($classConstant,
#set($nbPk = $tableUtils.getNumberOfPrimaryColumns($table))
#foreach($column in ${table.primaryKeyColumns})
#putJOOQColumnParam()
           $classFieldConstant#if($velocityCount!=$nbPk),
#end
#end
        );
#end
#end

	// FOREIGN KEY definitions
#foreach($table in $entities)
#exposeJOOQEntitySpecific()
#foreach($reference in $table.parents)
#putJOOQReferenceParam()
	public static final ForeignKey<$recordClassImport, $linkedRecordClassImport> fk_${classNameLowerCase}_${columnVariableUpperCase}1 = createForeignKey(KEY_${linkedTableNameLowerCase}_PRIMARY, $classConstant, $classFieldConstant);
#end
#end

	/**
	 * No instances
	 */
	private Keys() {}

$!updatedAreaImplementation	
}
